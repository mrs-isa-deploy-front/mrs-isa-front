{"ast":null,"code":"import axios from 'axios';\nimport authHeader from \"@/servieces/authHeader\";\nimport Config from \"../config.json\";\nconst CLIENT_API_BASE_URL = Config.BASE_URL + '/client';\n\nclass ClientServce {\n  getClient(clientID) {\n    console.log(authHeader());\n    return axios.get(CLIENT_API_BASE_URL + '/profile/' + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  updateClient(clientID, client) {\n    return axios.post(CLIENT_API_BASE_URL + \"/profile/\" + clientID, client, {\n      headers: authHeader()\n    });\n  }\n\n  verify(code) {\n    return axios.get(CLIENT_API_BASE_URL + \"/\" + code).then(response => {\n      if (response.data.accessToken) {\n        localStorage.user = JSON.stringify(response.data); //setItem('user', response.data);\n      }\n\n      return response.data;\n    });\n  }\n\n}\n\nexport default new ClientServce();","map":{"version":3,"sources":["D:/fakultet/6.semestar/MRS/Projekat/projekat-login/projekat/mrs-isa-front/src/servieces/ClientServce.js"],"names":["axios","authHeader","Config","CLIENT_API_BASE_URL","BASE_URL","ClientServce","getClient","clientID","console","log","get","headers","updateClient","client","post","verify","code","then","response","data","accessToken","localStorage","user","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,MAAMC,mBAAmB,GAAGD,MAAM,CAACE,QAAP,GAAkB,SAA9C;;AAEA,MAAMC,YAAN,CAAkB;AACdC,EAAAA,SAAS,CAACC,QAAD,EAAU;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAU,EAAtB;AACA,WAAOD,KAAK,CAACU,GAAN,CAAUP,mBAAmB,GAAC,WAApB,GAAgCI,QAA1C,EAAoD;AACvDI,MAAAA,OAAO,EAAEV,UAAU;AADoC,KAApD,CAAP;AAGH;;AACDW,EAAAA,YAAY,CAACL,QAAD,EAAWM,MAAX,EAAkB;AAC1B,WAAOb,KAAK,CAACc,IAAN,CAAWX,mBAAmB,GAAG,WAAtB,GAAoCI,QAA/C,EAAyDM,MAAzD,EAAiE;AACpEF,MAAAA,OAAO,EAAEV,UAAU;AADiD,KAAjE,CAAP;AAGH;;AACDc,EAAAA,MAAM,CAACC,IAAD,EAAM;AACR,WAAOhB,KAAK,CAACU,GAAN,CAAUP,mBAAmB,GAAG,GAAtB,GAA4Ba,IAAtC,EACFC,IADE,CACIC,QAAD,IAAa;AACf,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA8B;AAC1BC,QAAAA,YAAY,CAACC,IAAb,GAAoBC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAApB,CAD0B,CACyB;AACtD;;AACD,aAAOD,QAAQ,CAACC,IAAhB;AAEH,KAPE,CAAP;AAQH;;AArBa;;AAwBlB,eAAe,IAAId,YAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport authHeader from \"@/servieces/authHeader\";\r\n\r\nimport Config from \"../config.json\";\r\n\r\nconst CLIENT_API_BASE_URL = Config.BASE_URL + '/client';\r\n\r\nclass ClientServce{\r\n    getClient(clientID){\r\n        console.log(authHeader());\r\n        return axios.get(CLIENT_API_BASE_URL+'/profile/'+clientID, {\r\n            headers: authHeader()\r\n        });\r\n    }\r\n    updateClient(clientID, client){\r\n        return axios.post(CLIENT_API_BASE_URL + \"/profile/\" + clientID, client, {\r\n            headers: authHeader()\r\n        });\r\n    }\r\n    verify(code){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/\" + code)\r\n            .then((response) =>{\r\n                if (response.data.accessToken){\r\n                    localStorage.user = JSON.stringify(response.data); //setItem('user', response.data);\r\n                }\r\n                return response.data;\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport default new ClientServce();\r\n"]},"metadata":{},"sourceType":"module"}