{"ast":null,"code":"import clientReservationHistoryList from \"@/components/clientReservationHistoryList\";\nimport clientHeader from \"@/components/clientHeader\";\nimport clientServce from \"@/servieces/ClientServce\";\nimport PaginationComponent from \"@/components/paginationComponent\";\nimport reservationServce from \"@/servieces/ReservationServce\";\nexport default {\n  name: \"clientReservationHistory\",\n  components: {\n    PaginationComponent,\n    clientReservationHistoryList,\n    clientHeader\n  },\n  props: ['option_link', 'image_path', 'text'],\n  created: function () {\n    this.fromElement = 0;\n    this.type = this.$route.params.type;\n    console.log(this.type);\n    if (this.type == \"ship\") reservationServce.getPastShipReservations(JSON.parse(localStorage.user).id).then(response => {\n      this.cottageReservationHistory = response.data;\n      this.listLength = this.cottageReservationHistory.length;\n    });else if (this.type == \"cottage\") reservationServce.getPastCottageReservations(JSON.parse(localStorage.user).id).then(response => {\n      this.cottageReservationHistory = response.data;\n      this.listLength = this.cottageReservationHistory.length;\n    });else if (this.type == \"adventure\") reservationServce.getPastAdventureReservations(JSON.parse(localStorage.user).id).then(response => {\n      this.cottageReservationHistory = response.data;\n      this.listLength = this.cottageReservationHistory.length;\n    });\n  },\n  methods: {\n    fromUntilElement(from) {\n      this.fromElement = from;\n      this.forceRemounting();\n    },\n\n    itemReviewed(itemID) {\n      console.log(itemID);\n\n      for (let offer of this.cottageReservationHistory) {\n        console.log(offer);\n\n        if (offer.id == itemID) {\n          offer.reviewed = true;\n        }\n      }\n    },\n\n    forceRemounting() {\n      this.myKey -= 1;\n    },\n\n    sortList() {\n      //axios\n      this.fromElement = 0;\n      this.forceRemounting();\n      console.log(document.getElementById(\"sortBy\").value);\n      let sortBy = document.getElementById(\"sortBy\").value;\n\n      if (sortBy == 3 && this.type == \"cottage\") {\n        reservationServce.getSortedPastCottageReservationsByName(JSON.parse(localStorage.user).id).then(response => {\n          this.cottageReservationHistory = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 1 && this.type == \"cottage\") {\n        reservationServce.getSortedPastCottageReservationsByDate(JSON.parse(localStorage.user).id).then(response => {\n          this.cottageReservationHistory = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 2 && this.type == \"cottage\") {\n        reservationServce.getSortedPastCottageReservationsByDuration(JSON.parse(localStorage.user).id).then(response => {\n          this.cottageReservationHistory = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 4 && this.type == \"cottage\") {\n        reservationServce.getSortedPastCottageReservationsByPrice(JSON.parse(localStorage.user).id).then(response => {\n          this.cottageReservationHistory = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 3 && this.type == \"ship\") {\n        reservationServce.getSortedPastShipReservationsByName(JSON.parse(localStorage.user).id).then(response => {\n          this.cottageReservationHistory = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 1 && this.type == \"ship\") {\n        reservationServce.getSortedPastShipReservationsByDate(JSON.parse(localStorage.user).id).then(response => {\n          this.cottageReservationHistory = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 2 && this.type == \"ship\") {\n        reservationServce.getSortedPastShipReservationsByDuration(JSON.parse(localStorage.user).id).then(response => {\n          this.cottageReservationHistory = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 4 && this.type == \"ship\") {\n        reservationServce.getSortedPastShipReservationsByPrice(JSON.parse(localStorage.user).id).then(response => {\n          this.cottageReservationHistory = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 3 && this.type == \"adventure\") {\n        reservationServce.getSortedPastAdventureReservationsByName(JSON.parse(localStorage.user).id).then(response => {\n          this.cottageReservationHistory = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 1 && this.type == \"adventure\") {\n        reservationServce.getSortedPastAdventureReservationsByDate(JSON.parse(localStorage.user).id).then(response => {\n          this.cottageReservationHistory = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 2 && this.type == \"adventure\") {\n        reservationServce.getSortedPastAdventureReservationsByDuration(JSON.parse(localStorage.user).id).then(response => {\n          this.cottageReservationHistory = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 4 && this.type == \"adventure\") {\n        reservationServce.getSortedPastAdventureReservationsByPrice(JSON.parse(localStorage.user).id).then(response => {\n          this.cottageReservationHistory = response.data;\n          this.forceRemounting();\n        });\n      }\n    },\n\n    checkIfNeedsToBeDisplayed(index) {\n      let untilElement = parseInt(this.numberOfElementsForDisplay) + parseInt(this.fromElement);\n      console.log(index);\n      console.log(this.fromElement);\n      console.log(untilElement);\n\n      if (index >= this.fromElement && index < untilElement) {\n        return true;\n      }\n\n      return false;\n    }\n\n  },\n\n  data() {\n    return {\n      myKey: 0,\n      fromElement: 0,\n      cottageReservationHistory: [],\n      numberOfElementsForDisplay: 3\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["clientReservationHistoryList","clientHeader","clientServce","PaginationComponent","reservationServce","name","components","props","created","fromElement","type","$route","params","console","log","getPastShipReservations","JSON","parse","localStorage","user","id","then","response","cottageReservationHistory","data","listLength","length","getPastCottageReservations","getPastAdventureReservations","methods","fromUntilElement","from","forceRemounting","itemReviewed","itemID","offer","reviewed","myKey","sortList","document","getElementById","value","sortBy","getSortedPastCottageReservationsByName","getSortedPastCottageReservationsByDate","getSortedPastCottageReservationsByDuration","getSortedPastCottageReservationsByPrice","getSortedPastShipReservationsByName","getSortedPastShipReservationsByDate","getSortedPastShipReservationsByDuration","getSortedPastShipReservationsByPrice","getSortedPastAdventureReservationsByName","getSortedPastAdventureReservationsByDate","getSortedPastAdventureReservationsByDuration","getSortedPastAdventureReservationsByPrice","checkIfNeedsToBeDisplayed","index","untilElement","parseInt","numberOfElementsForDisplay"],"sourceRoot":"","sources":["D:\\fakultet\\6.semestar\\MRS\\Projekat\\projekat-login\\projekat\\mrs-isa-front\\src\\components\\clientReservationHistory.vue"],"sourcesContent":["<template>\r\n  <div style=\"overflow-scrolling: auto\">\r\n    <clientHeader></clientHeader>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-8\">\r\n      </div>\r\n      <div class=\"col-3 justify-content-right\" >\r\n        <select id=\"sortBy\" @change=\"sortList\" class=\"form-select\" aria-label=\"Default select\">\r\n          <option selected>Sortiraj po</option>\r\n          <option value=\"1\">Datum</option>\r\n          <option value=\"2\">Trajanja</option>\r\n          <option value=\"3\">Naziv</option>\r\n          <option value=\"4\">Cena</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div>\r\n      <clientReservationHistoryList @reviewed=\"itemReviewed\" :key=\"myKey\" :numToDisplay=\"numberOfElementsForDisplay\" :from=\"fromElement\" :cottagesHistory=\"cottageReservationHistory\"> </clientReservationHistoryList>\r\n    </div>\r\n\r\n    <pagination-component :numberOfElementsToDisplay=\"numberOfElementsForDisplay\" :fromElement=\"fromElement\" :numberOfElements=\"listLength\" @pagination=\"fromUntilElement\" class=\"d-flex justify-content-center\"></pagination-component>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport clientReservationHistoryList from \"@/components/clientReservationHistoryList\";\r\nimport clientHeader from \"@/components/clientHeader\";\r\nimport clientServce from \"@/servieces/ClientServce\";\r\nimport PaginationComponent from \"@/components/paginationComponent\";\r\nimport reservationServce from \"@/servieces/ReservationServce\";\r\nexport default {\r\n  name: \"clientReservationHistory\",\r\n  components:{\r\n    PaginationComponent,\r\n    clientReservationHistoryList,\r\n    clientHeader\r\n  },\r\n  props: ['option_link', 'image_path', 'text'],\r\n  created: function() {\r\n    this.fromElement = 0;\r\n    this.type = this.$route.params.type;\r\n    console.log(this.type);\r\n    if (this.type == \"ship\")\r\n      reservationServce.getPastShipReservations(JSON.parse(localStorage.user).id)\r\n          .then(response =>{\r\n            this.cottageReservationHistory = response.data;\r\n            this.listLength = this.cottageReservationHistory.length;\r\n          })\r\n    else if (this.type == \"cottage\")\r\n      reservationServce.getPastCottageReservations(JSON.parse(localStorage.user).id)\r\n          .then((response) => {\r\n            this.cottageReservationHistory = response.data;\r\n            this.listLength = this.cottageReservationHistory.length;\r\n            }\r\n      );\r\n    else if (this.type == \"adventure\")\r\n      reservationServce.getPastAdventureReservations(JSON.parse(localStorage.user).id)\r\n          .then((response) => {\r\n                this.cottageReservationHistory = response.data;\r\n                this.listLength = this.cottageReservationHistory.length;\r\n              }\r\n          );\r\n\r\n  },\r\n  methods : {\r\n    fromUntilElement(from){\r\n      this.fromElement = from;\r\n      this.forceRemounting();\r\n    },\r\n    itemReviewed(itemID){\r\n      console.log(itemID);\r\n      for (let offer of this.cottageReservationHistory){\r\n        console.log(offer);\r\n        if (offer.id == itemID){\r\n          offer.reviewed = true;\r\n        }\r\n      }\r\n    },\r\n    forceRemounting(){\r\n      this.myKey -= 1;\r\n    },\r\n    sortList(){\r\n      //axios\r\n      this.fromElement = 0;\r\n      this.forceRemounting();\r\n      console.log(document.getElementById(\"sortBy\").value);\r\n      let sortBy = document.getElementById(\"sortBy\").value;\r\n      if (sortBy == 3 && this.type == \"cottage\"){\r\n        reservationServce.getSortedPastCottageReservationsByName(JSON.parse(localStorage.user).id)\r\n            .then(response =>{\r\n              this.cottageReservationHistory = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      } else if (sortBy == 1 && this.type == \"cottage\"){\r\n        reservationServce.getSortedPastCottageReservationsByDate(JSON.parse(localStorage.user).id)\r\n            .then(response =>{\r\n              this.cottageReservationHistory = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }else if (sortBy == 2 && this.type == \"cottage\"){\r\n        reservationServce.getSortedPastCottageReservationsByDuration(JSON.parse(localStorage.user).id)\r\n            .then(response =>{\r\n              this.cottageReservationHistory = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }else if (sortBy == 4 && this.type == \"cottage\"){\r\n        reservationServce.getSortedPastCottageReservationsByPrice(JSON.parse(localStorage.user).id)\r\n            .then(response =>{\r\n              this.cottageReservationHistory = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }else if (sortBy == 3 && this.type == \"ship\"){\r\n        reservationServce.getSortedPastShipReservationsByName(JSON.parse(localStorage.user).id)\r\n            .then(response =>{\r\n              this.cottageReservationHistory = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      } else if (sortBy == 1 && this.type == \"ship\"){\r\n        reservationServce.getSortedPastShipReservationsByDate(JSON.parse(localStorage.user).id)\r\n            .then(response =>{\r\n              this.cottageReservationHistory = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }else if (sortBy == 2 && this.type == \"ship\"){\r\n        reservationServce.getSortedPastShipReservationsByDuration(JSON.parse(localStorage.user).id)\r\n            .then(response =>{\r\n              this.cottageReservationHistory = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }else if (sortBy == 4 && this.type == \"ship\"){\r\n        reservationServce.getSortedPastShipReservationsByPrice(JSON.parse(localStorage.user).id)\r\n            .then(response =>{\r\n              this.cottageReservationHistory = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }else if (sortBy == 3 && this.type == \"adventure\"){\r\n        reservationServce.getSortedPastAdventureReservationsByName(JSON.parse(localStorage.user).id)\r\n            .then(response =>{\r\n              this.cottageReservationHistory = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      } else if (sortBy == 1 && this.type == \"adventure\"){\r\n        reservationServce.getSortedPastAdventureReservationsByDate(JSON.parse(localStorage.user).id)\r\n            .then(response =>{\r\n              this.cottageReservationHistory = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }else if (sortBy == 2 && this.type == \"adventure\"){\r\n        reservationServce.getSortedPastAdventureReservationsByDuration(JSON.parse(localStorage.user).id)\r\n            .then(response =>{\r\n              this.cottageReservationHistory = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }else if (sortBy == 4 && this.type == \"adventure\") {\r\n        reservationServce.getSortedPastAdventureReservationsByPrice(JSON.parse(localStorage.user).id)\r\n            .then(response => {\r\n              this.cottageReservationHistory = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }\r\n    },\r\n    checkIfNeedsToBeDisplayed(index){\r\n      let untilElement = parseInt(this.numberOfElementsForDisplay) + parseInt(this.fromElement);\r\n      console.log(index);\r\n      console.log(this.fromElement);\r\n      console.log(untilElement);\r\n      if (index >= this.fromElement && index < untilElement){\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      myKey: 0,\r\n      fromElement: 0,\r\n      cottageReservationHistory: [],\r\n      numberOfElementsForDisplay: 3\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}