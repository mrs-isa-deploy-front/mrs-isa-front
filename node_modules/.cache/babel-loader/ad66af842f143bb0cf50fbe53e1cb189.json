{"ast":null,"code":"import instructorHeader from \"@/components/insrtuctorHeader\";\nimport imagesCarousel from \"@/components/imagesCarousel\";\nimport AdventureService from \"@/services/AdventureService\";\nimport openLayers from \"@/components/VueMaps\";\nexport default {\n  name: \"adventure-instructor\",\n  components: {\n    instructorHeader,\n    imagesCarousel,\n    openLayers\n  },\n  created: function () {\n    let type = this.$route.params.type;\n    AdventureService.getAdventure(type).then(response => {\n      this.adventure = response.data;\n      console.log(this.adventure);\n    }).catch(function (error) {\n      console.log(error.toJSON());\n\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // error.request is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n  },\n  methods: {\n    updateCoordinats(lon, lat) {\n      this.adventure.longitude = lon;\n      this.adventure.latitude = lat;\n      console.log(lon, lat);\n    }\n\n  },\n\n  data() {\n    return {\n      adventure: {\n        id: 2,\n        name: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        description: \"\",\n        behaviorRules: [],\n        images: [],\n        fishingEquipment: [],\n        cancelConditions: [],\n        price: \"\",\n        capacity: \"\",\n        instructorBiography: \"\",\n        additionalServices: [],\n        days: ['5', '10', '15', '20'],\n        percentage: ['0', '0', '0', '0'],\n        experienceReviews: []\n      }\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAsEA,OAAOA,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAGA,eAAe;AACbC,MAAI,EAAE,sBADO;AAEbC,YAAU,EAAE;AACVL,oBADU;AAEVC,kBAFU;AAGVE;AAHU,GAFC;AAObG,SAAO,EACH,YAAY;AACV,QAAIC,IAAG,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBF,IAA9B;AACAL,oBAAgB,CAACQ,YAAjB,CAA8BH,IAA9B,EAAoCI,IAApC,CAA0CC,QAAD,IAAc;AACrD,WAAKC,SAAL,GAAiBD,QAAQ,CAACE,IAA1B;AACAC,aAAO,CAACC,GAAR,CAAY,KAAKH,SAAjB;AACD,KAHD,EAIKI,KAJL,CAIW,UAAUC,KAAV,EAAiB;AACtBH,aAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,MAAN,EAAZ;;AACA,UAAID,KAAK,CAACN,QAAV,EAAoB;AAClB;AACA;AACAG,eAAO,CAACC,GAAR,CAAYE,KAAK,CAACN,QAAN,CAAeE,IAA3B;AACAC,eAAO,CAACC,GAAR,CAAYE,KAAK,CAACN,QAAN,CAAeQ,MAA3B;AACAL,eAAO,CAACC,GAAR,CAAYE,KAAK,CAACN,QAAN,CAAeS,OAA3B;AACF,OANA,MAMO,IAAIH,KAAK,CAACI,OAAV,EAAmB;AACxB;AACA;AACA;AACAP,eAAO,CAACC,GAAR,CAAYE,KAAK,CAACI,OAAlB;AACF,OALO,MAKA;AACL;AACAP,eAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAAK,CAACK,OAA3B;AACF;;AACAR,aAAO,CAACC,GAAR,CAAYE,KAAK,CAACM,MAAlB;AACD,KAtBL;AAuBD,GAjCQ;AAkCbC,SAAO,EAAE;AACPC,oBAAgB,CAACC,GAAD,EAAMC,GAAN,EAAW;AACzB,WAAKf,SAAL,CAAegB,SAAf,GAA2BF,GAA3B;AACA,WAAKd,SAAL,CAAeiB,QAAf,GAA0BF,GAA1B;AACAb,aAAO,CAACC,GAAR,CAAYW,GAAZ,EAAiBC,GAAjB;AACF;;AALO,GAlCI;;AAyCbd,MAAI,GAAG;AACL,WAAO;AACLD,eAAS,EAAE;AACTkB,UAAE,EAAE,CADK;AAET3B,YAAI,EAAE,EAFG;AAGT0B,gBAAQ,EAAE,EAHD;AAITD,iBAAS,EAAE,EAJF;AAKTG,mBAAW,EAAE,EALJ;AAMTC,qBAAa,EAAE,EANN;AAOTC,cAAM,EAAE,EAPC;AAQTC,wBAAgB,EAAE,EART;AASTC,wBAAgB,EAAE,EATT;AAUTC,aAAK,EAAE,EAVE;AAWTC,gBAAQ,EAAE,EAXD;AAYTC,2BAAmB,EAAE,EAZZ;AAaTC,0BAAkB,EAAE,EAbX;AAcTC,YAAI,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,CAdG;AAeTC,kBAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAfH;AAgBTC,yBAAiB,EAAE;AAhBV;AADN,KAAP;AAoBF;;AA9Da,CAAf","names":["instructorHeader","imagesCarousel","AdventureService","openLayers","name","components","created","type","$route","params","getAdventure","then","response","adventure","data","console","log","catch","error","toJSON","status","headers","request","message","config","methods","updateCoordinats","lon","lat","longitude","latitude","id","description","behaviorRules","images","fishingEquipment","cancelConditions","price","capacity","instructorBiography","additionalServices","days","percentage","experienceReviews"],"sourceRoot":"","sources":["D:\\fakultet\\6.semestar\\MRS\\Projekat\\projekat-login\\projekat\\mrs-isa-front\\src\\components\\fishing_instructor\\adventureForFishingInstructor.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <instructor-header></instructor-header>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-8\">\r\n\r\n        <h1 align=\"left\">{{ adventure.name }}</h1>\r\n\r\n        <openLayers :lon=\"adventure.longitude\" :lat=\"adventure.latitude\" @coordinate-changed=\"updateCoordinats\"\r\n                    style=\"width: 300px; height: 380px; visibility: visible\"></openLayers>\r\n\r\n        <h3 align=\"left\" class=\"px-5\"><em>{{ adventure.description }} </em></h3>\r\n\r\n        <div class=\"px-5\">\r\n          <images-carousel :image_paths=adventure.images></images-carousel>\r\n        </div>\r\n\r\n\r\n        <h4 align=\"left\" class=\"px-5\"> cena: {{ adventure.price }} </h4>\r\n        <h4 align=\"left\" class=\"px-5\"> maksimalan broj osoba: {{ adventure.capacity }} </h4>\r\n        <hr>\r\n        <h4 align=\"left\" class=\"px-5\"> Pravila ponašanja </h4>\r\n        <ul align=\"left\" class=\"px-5\">\r\n          <li align=\"left\" class=\"px-10\" v-for=\"rule in adventure.behaviorRules\" :key=\"rule\">{{ rule }}</li>\r\n        </ul>\r\n        <hr>\r\n\r\n        <h4 align=\"left\" class=\"px-5\"> Pecaroška oprema </h4>\r\n        <ul align=\"left\" class=\"px-5\">\r\n          <li align=\"left\" class=\"px-10\" v-for=\"equipment in adventure.fishingEquipment\" :key=\"equipment\">\r\n            {{ equipment }}\r\n          </li>\r\n        </ul>\r\n        <hr>\r\n        <h4 align=\"left\" class=\"px-5\"> Uslovi otkaza </h4>\r\n        <ul align=\"left\" class=\"px-5\">\r\n          <li align=\"left\" class=\"px-10\" v-for=\"cancel in adventure.cancelConditions\" :key=\"cancel\">\r\n            {{ cancel }}\r\n          </li>\r\n        </ul>\r\n        <hr>\r\n\r\n        <h4 align=\"left\" class=\"px-5\">Biografija instruktora</h4>\r\n        <p align=\"left\" class=\"px-5\">{{ adventure.instructorBiography }}</p>\r\n        <hr>\r\n        <h4 align=\"left\" class=\"px-5\"> Iskustva avanturista </h4>\r\n        <div align=\"left\" class=\"px-5\">\r\n          <div align=\"left\" border-style=\"solid\" v-for=\"review in adventure.experienceReviews\" :key=\"review\">\r\n            <em><p class=\"px-10\">{{ review }}</p></em>\r\n            <br/>\r\n          </div>\r\n        </div>\r\n\r\n        <div align=\"left\" class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n          <button class=\"btn btn-secondary me-md-2\" type=\"button\">Izmeni</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"col\">\r\n        <p>ovde kalendar</p> -->\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport instructorHeader from \"@/components/insrtuctorHeader\"\r\nimport imagesCarousel from \"@/components/imagesCarousel\";\r\nimport AdventureService from \"@/services/AdventureService\";\r\nimport openLayers from \"@/components/VueMaps\";\r\n\r\n\r\nexport default {\r\n  name: \"adventure-instructor\",\r\n  components: {\r\n    instructorHeader,\r\n    imagesCarousel,\r\n    openLayers,\r\n  },\r\n  created:\r\n      function () {\r\n        let type = this.$route.params.type\r\n        AdventureService.getAdventure(type).then((response) => {\r\n          this.adventure = response.data;\r\n          console.log(this.adventure)\r\n        })\r\n            .catch(function (error) {\r\n              console.log(error.toJSON());\r\n              if (error.response) {\r\n                // The request was made and the server responded with a status code\r\n                // that falls out of the range of 2xx\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n              } else if (error.request) {\r\n                // The request was made but no response was received\r\n                // error.request is an instance of XMLHttpRequest in the browser and an instance of\r\n                // http.ClientRequest in node.js\r\n                console.log(error.request);\r\n              } else {\r\n                // Something happened in setting up the request that triggered an Error\r\n                console.log('Error', error.message);\r\n              }\r\n              console.log(error.config);\r\n            });\r\n      },\r\n  methods: {\r\n    updateCoordinats(lon, lat) {\r\n      this.adventure.longitude = lon;\r\n      this.adventure.latitude = lat;\r\n      console.log(lon, lat)\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      adventure: {\r\n        id: 2,\r\n        name: \"\",\r\n        latitude: \"\",\r\n        longitude: \"\",\r\n        description: \"\",\r\n        behaviorRules: [],\r\n        images: [],\r\n        fishingEquipment: [],\r\n        cancelConditions: [],\r\n        price: \"\",\r\n        capacity: \"\",\r\n        instructorBiography: \"\",\r\n        additionalServices: [],\r\n        days: ['5', '10', '15', '20'],\r\n        percentage: ['0', '0', '0', '0'],\r\n        experienceReviews: [],\r\n      },\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}