{"ast":null,"code":"export default function useValidators() {\n  const isEmpty = (fieldName, fieldValue) => {\n    return !fieldValue ? \"Polje je obavezno.\" : \"\";\n  };\n\n  const isEqual = (password, againPassword) => {\n    return !password === againPassword ? \"Lozinke se ne poklapaju\" : \"\";\n  };\n\n  const minLength = (fieldName, fieldValue, min) => {\n    return fieldValue.length < min ? `Mora biti minimum ${min} karaktera` : \"\";\n  };\n\n  const isEmail = (fieldName, fieldValue) => {\n    let re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return !re.test(fieldValue) ? \"Nije ispravan email.\" : \"\";\n  };\n\n  const isNum = (fieldName, fieldValue) => {\n    let isNum = /^\\d+$/.test(fieldValue);\n    return !isNum ? \"Polje sadrži samo brojeve.\" : \"\";\n  };\n\n  return {\n    isEqual,\n    isEmpty,\n    minLength,\n    isEmail,\n    isNum\n  };\n}","map":{"version":3,"sources":["D:/fakultet/6.semestar/MRS/Projekat/projekat-login/projekat/mrs-isa-front/src/validations/validators.js"],"names":["useValidators","isEmpty","fieldName","fieldValue","isEqual","password","againPassword","minLength","min","length","isEmail","re","test","isNum"],"mappings":"AAAA,eAAe,SAASA,aAAT,GAAyB;AAEpC,QAAMC,OAAO,GAAG,CAACC,SAAD,EAAYC,UAAZ,KAA2B;AACvC,WAAO,CAACA,UAAD,GAAc,oBAAd,GAAqC,EAA5C;AACH,GAFD;;AAGA,QAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,aAAX,KAA6B;AACzC,WAAO,CAACD,QAAD,KAAYC,aAAZ,GAA2B,yBAA3B,GAAqD,EAA5D;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,CAACL,SAAD,EAAYC,UAAZ,EAAwBK,GAAxB,KAAgC;AAC9C,WAAOL,UAAU,CAACM,MAAX,GAAoBD,GAApB,GAA2B,qBAAoBA,GAAI,YAAnD,GAAiE,EAAxE;AACH,GAFD;;AAIA,QAAME,OAAO,GAAG,CAACR,SAAD,EAAYC,UAAZ,KAA2B;AACvC,QAAIQ,EAAE,GAAG,uJAAT;AACA,WAAO,CAACA,EAAE,CAACC,IAAH,CAAQT,UAAR,CAAD,GAAuB,sBAAvB,GAAgD,EAAvD;AACH,GAHD;;AAKA,QAAMU,KAAK,GAAG,CAACX,SAAD,EAAYC,UAAZ,KAA2B;AACrC,QAAIU,KAAK,GAAG,QAAQD,IAAR,CAAaT,UAAb,CAAZ;AACA,WAAO,CAACU,KAAD,GAAS,4BAAT,GAAwC,EAA/C;AACH,GAHD;;AAKA,SAAO;AAAET,IAAAA,OAAF;AAAUH,IAAAA,OAAV;AAAmBM,IAAAA,SAAnB;AAA8BG,IAAAA,OAA9B;AAAuCG,IAAAA;AAAvC,GAAP;AACH","sourcesContent":["export default function useValidators() {\r\n\r\n    const isEmpty = (fieldName, fieldValue) => {\r\n        return !fieldValue ? \"Polje je obavezno.\" : \"\";\r\n    }\r\n    const isEqual = (password, againPassword) => {\r\n        return !password===againPassword? \"Lozinke se ne poklapaju\":\"\";\r\n    }\r\n\r\n    const minLength = (fieldName, fieldValue, min) => {\r\n        return fieldValue.length < min ? `Mora biti minimum ${min} karaktera` : \"\";\r\n    }\r\n\r\n    const isEmail = (fieldName, fieldValue) => {\r\n        let re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return !re.test(fieldValue) ? \"Nije ispravan email.\" : \"\";\r\n    }\r\n\r\n    const isNum = (fieldName, fieldValue) => {\r\n        let isNum = /^\\d+$/.test(fieldValue);\r\n        return !isNum ? \"Polje sadrži samo brojeve.\" : \"\";\r\n    }\r\n\r\n    return { isEqual,isEmpty, minLength, isEmail, isNum }\r\n}"]},"metadata":{},"sourceType":"module"}