{"ast":null,"code":"import axios from 'axios';\nimport authHeader from \"@/servieces/authHeader\";\nimport Config from \"../config.json\";\nconst CLIENT_API_BASE_URL = Config.BASE_URL + '/client';\n\nclass ClientServce {\n  getClient(clientID) {\n    console.log(authHeader());\n    return axios.get(CLIENT_API_BASE_URL + '/profile/' + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getClientPenalties(clientId) {\n    return axios.get(CLIENT_API_BASE_URL + '/penalties/' + clientId, {\n      headers: authHeader()\n    });\n  }\n\n  updateClient(clientID, client) {\n    return axios.post(CLIENT_API_BASE_URL + \"/profile/\" + clientID, client, {\n      headers: authHeader()\n    });\n  }\n\n  getPastCottageReservations(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/cottage/history/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getPastShipReservations(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/ship/history/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getPastAdventureReservations(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/adventure/history/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getSortedPastAdventureReservationsByName(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/adventure/history/name/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getSortedPastAdventureReservationsByDate(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/adventure/history/date/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getSortedPastAdventureReservationsByPrice(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/adventure/history/price/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getSortedPastAdventureReservationsByDuration(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/adventure/history/duration/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getSortedPastCottageReservationsByName(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/cottage/history/name/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getSortedPastCottageReservationsByDate(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/cottage/history/date/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getSortedPastCottageReservationsByPrice(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/cottage/history/price/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getSortedPastCottageReservationsByDuration(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/cottage/history/duration/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getSortedPastShipReservationsByName(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/ship/history/name/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getSortedPastShipReservationsByDate(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/ship/history/date/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getSortedPastShipReservationsByPrice(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/ship/history/price/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  getSortedPastShipReservationsByDuration(clientID) {\n    return axios.get(CLIENT_API_BASE_URL + \"/ship/history/duration/\" + clientID, {\n      headers: authHeader()\n    });\n  }\n\n  verify(code) {\n    return axios.get(CLIENT_API_BASE_URL + \"/verify/\" + code).then(response => {\n      console.log(response.data);\n\n      if (response.data.accessToken) {\n        localStorage.user = JSON.stringify(response.data); //setItem('user', response.data);\n      } else {\n        localStorage.user = null;\n      }\n\n      return response.data;\n    });\n  }\n\n}\n\nexport default new ClientServce();","map":{"version":3,"sources":["D:/fakultet/6.semestar/MRS/Projekat/projekat-login/projekat/mrs-isa-front/src/servieces/ClientServce.js"],"names":["axios","authHeader","Config","CLIENT_API_BASE_URL","BASE_URL","ClientServce","getClient","clientID","console","log","get","headers","getClientPenalties","clientId","updateClient","client","post","getPastCottageReservations","getPastShipReservations","getPastAdventureReservations","getSortedPastAdventureReservationsByName","getSortedPastAdventureReservationsByDate","getSortedPastAdventureReservationsByPrice","getSortedPastAdventureReservationsByDuration","getSortedPastCottageReservationsByName","getSortedPastCottageReservationsByDate","getSortedPastCottageReservationsByPrice","getSortedPastCottageReservationsByDuration","getSortedPastShipReservationsByName","getSortedPastShipReservationsByDate","getSortedPastShipReservationsByPrice","getSortedPastShipReservationsByDuration","verify","code","then","response","data","accessToken","localStorage","user","JSON","stringify"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport authHeader from \"@/servieces/authHeader\";\r\n\r\nimport Config from \"../config.json\";\r\n\r\nconst CLIENT_API_BASE_URL = Config.BASE_URL + '/client';\r\n\r\nclass ClientServce{\r\n    getClient(clientID){\r\n        console.log(authHeader());\r\n        return axios.get(CLIENT_API_BASE_URL+'/profile/'+clientID, {\r\n            headers: authHeader()\r\n        });\r\n    }\r\n    getClientPenalties(clientId){\r\n        return axios.get(CLIENT_API_BASE_URL+'/penalties/'+clientId, {\r\n            headers: authHeader()\r\n        });\r\n    }\r\n    updateClient(clientID, client){\r\n        return axios.post(CLIENT_API_BASE_URL + \"/profile/\" + clientID, client, {\r\n            headers: authHeader()\r\n        });\r\n    }\r\n\r\n\r\n    getPastCottageReservations(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/cottage/history/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n    getPastShipReservations(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/ship/history/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n    getPastAdventureReservations(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/adventure/history/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n\r\n\r\n    getSortedPastAdventureReservationsByName(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/adventure/history/name/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n    getSortedPastAdventureReservationsByDate(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/adventure/history/date/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n    getSortedPastAdventureReservationsByPrice(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/adventure/history/price/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n    getSortedPastAdventureReservationsByDuration(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/adventure/history/duration/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n\r\n\r\n    getSortedPastCottageReservationsByName(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/cottage/history/name/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n    getSortedPastCottageReservationsByDate(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/cottage/history/date/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n    getSortedPastCottageReservationsByPrice(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/cottage/history/price/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n    getSortedPastCottageReservationsByDuration(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/cottage/history/duration/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n    getSortedPastShipReservationsByName(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/ship/history/name/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n    getSortedPastShipReservationsByDate(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/ship/history/date/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n    getSortedPastShipReservationsByPrice(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/ship/history/price/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n    getSortedPastShipReservationsByDuration(clientID){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/ship/history/duration/\" + clientID, {\r\n            headers : authHeader()\r\n        });\r\n    }\r\n    verify(code){\r\n        return axios.get(CLIENT_API_BASE_URL + \"/verify/\" + code)\r\n            .then((response) =>{\r\n                console.log(response.data);\r\n                if (response.data.accessToken){\r\n                    localStorage.user = JSON.stringify(response.data); //setItem('user', response.data);\r\n                }else{\r\n                    localStorage.user = null;\r\n                }\r\n\r\n                return response.data;\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport default new ClientServce();\r\n"]},"metadata":{},"sourceType":"module"}