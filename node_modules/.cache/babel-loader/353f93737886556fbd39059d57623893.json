{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_site_cottage_element = _resolveComponent(\"site-cottage-element\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cottages, c => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"p-2\",\n      key: c.id\n    }, [_createVNode(_component_site_cottage_element, {\n      cottage: c\n    }, null, 8\n    /* PROPS */\n    , [\"cottage\"])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;AAEOA,OAAK,EAAC;;;;;uBAAXC,oBAIM,KAJN,cAIM,oBAHJA,oBAEMC,SAFN,EAEM,IAFN,EAEMC,YAFyBC,cAEzB,EAFmBC,CAAc,IAAb;yBAA1BJ,oBAEM,KAFN,EAEM;AAFDD,WAAK,EAAC,KAEL;AAFqCM,SAAG,EAAED,CAAC,CAACE;AAE5C,KAFN,GACEC,aAA0DC,+BAA1D,EAA0D;AAAnCC,aAAO,EAAEL;AAA0B,KAA1D,EAAiC,IAAjC,EAAiC;AAAA;AAAjC,MAAiC,WAAjC,EADF;GAEM,CAFN;;AAAA,GAGI,EAJN","names":["class","_createElementBlock","_Fragment","_renderList","$data","c","key","id","_createVNode","_component_site_cottage_element","cottage"],"sourceRoot":"","sources":["D:\\fakultet\\6.semestar\\MRS\\Projekat\\projekat-login\\projekat\\mrs-isa-front\\src\\components\\main_site\\siteCottageList.vue"],"sourcesContent":["<template>\r\n\r\n  <div class=\"container\" >\r\n    <div class=\"p-2\" v-for=\"(c) in cottages\"  :key=\"c.id\">\r\n      <site-cottage-element :cottage=\"c\"></site-cottage-element>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport cottageServce from \"@/servieces/CottageServce\";\r\nimport SiteCottageElement from \"@/components/main_site/siteCottageElement\";\r\nexport default {\r\n  name: \"cottageList\",\r\n  components: {SiteCottageElement},\r\n  mounted() {\r\n    cottageServce.getCottages().then(\r\n        (response) =>{\r\n          this.cottages = response.data;\r\n        }\r\n    )\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      cottages : []\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}