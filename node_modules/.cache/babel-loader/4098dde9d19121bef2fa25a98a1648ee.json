{"ast":null,"code":"export default {\n  name: \"paginationComponent\",\n  props: [\"numberOfElements\", \"fromElement\", \"numberOfElementsToDisplay\"],\n\n  mounted() {\n    console.log(\" num of elements:\" + this.numberOfElements);\n    this.componentFromElement = this.fromElement;\n    this.makeIntervalNumber();\n  },\n\n  methods: {\n    makeIntervalNumber() {\n      this.intervalDisplayed = parseInt(this.fromElement) + parseInt(this.numberOfElementsToDisplay);\n      if (this.intervalDisplayed > this.numberOfElements) this.intervalDisplayed = this.numberOfElements;\n      console.log(\"fromElement: \" + this.fromElement);\n      console.log(\"interval display: \" + this.intervalDisplayed);\n    },\n\n    makeFirst() {\n      this.$emit('pagination', 0);\n      this.makeIntervalNumber();\n      this.componentFromElement = 0;\n    },\n\n    makePrevaius() {\n      let newFromElement = parseInt(this.fromElement) - parseInt(this.numberOfElementsToDisplay);\n      if (newFromElement <= 0) newFromElement = 0;\n      this.$emit('pagination', newFromElement);\n      this.makeIntervalNumber();\n      this.componentFromElement = newFromElement;\n    },\n\n    makeNext() {\n      console.log(this.numberOfElements);\n      let newFromElement = parseInt(this.fromElement) + parseInt(this.numberOfElementsToDisplay);\n      if (newFromElement >= this.numberOfElements) newFromElement = this.fromElement;\n      this.$emit('pagination', newFromElement);\n      this.makeIntervalNumber();\n      this.componentFromElement = newFromElement;\n    },\n\n    makeLast() {\n      let newFromElement = parseInt(this.numberOfElements) / parseInt(this.numberOfElementsToDisplay);\n      newFromElement = parseInt(this.numberOfElements) - parseInt(newFromElement); // this.numberOfElements - this.fromElement;\n\n      console.log(newFromElement);\n      console.log(this.numberOfElements);\n      this.$emit('pagination', newFromElement);\n      this.makeIntervalNumber();\n      this.componentFromElement = newFromElement;\n    }\n\n  },\n\n  data() {\n    return {\n      intervalDisplayed: 0\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA8BA,eAAe;AACbA,MAAI,EAAE,qBADO;AAEbC,OAAK,EAAE,CAAC,kBAAD,EAAqB,aAArB,EAAoC,2BAApC,CAFM;;AAGbC,SAAO,GAAG;AACRC,WAAO,CAACC,GAAR,CAAY,sBAAsB,KAAKC,gBAAvC;AACA,SAAKC,oBAAL,GAA4B,KAAKC,WAAjC;AACA,SAAKC,kBAAL;AAED,GARY;;AASbC,SAAO,EAAE;AACPD,sBAAkB,GAAE;AAClB,WAAKE,iBAAL,GAAyBC,QAAQ,CAAC,KAAKJ,WAAN,CAAR,GAA6BI,QAAQ,CAAC,KAAKC,yBAAN,CAA9D;AACA,UAAI,KAAKF,iBAAL,GAAyB,KAAKL,gBAAlC,EACE,KAAKK,iBAAL,GAAyB,KAAKL,gBAA9B;AACFF,aAAO,CAACC,GAAR,CAAY,kBAAkB,KAAKG,WAAnC;AACAJ,aAAO,CAACC,GAAR,CAAY,uBAAuB,KAAKM,iBAAxC;AACD,KAPM;;AAQPG,aAAS,GAAE;AACT,WAAKC,KAAL,CAAW,YAAX,EAAyB,CAAzB;AACA,WAAKN,kBAAL;AACA,WAAKF,oBAAL,GAA4B,CAA5B;AACD,KAZM;;AAaPS,gBAAY,GAAE;AACZ,UAAIC,cAAa,GAAIL,QAAQ,CAAC,KAAKJ,WAAN,CAAR,GAA6BI,QAAQ,CAAC,KAAKC,yBAAN,CAA1D;AACA,UAAII,cAAa,IAAK,CAAtB,EACEA,cAAa,GAAI,CAAjB;AACF,WAAKF,KAAL,CAAW,YAAX,EAAyBE,cAAzB;AACA,WAAKR,kBAAL;AACA,WAAKF,oBAAL,GAA4BU,cAA5B;AACD,KApBM;;AAqBPC,YAAQ,GAAE;AACRd,aAAO,CAACC,GAAR,CAAY,KAAKC,gBAAjB;AACA,UAAIW,cAAa,GAAIL,QAAQ,CAAC,KAAKJ,WAAN,CAAR,GAA6BI,QAAQ,CAAC,KAAKC,yBAAN,CAA1D;AACA,UAAII,cAAa,IAAK,KAAKX,gBAA3B,EACEW,cAAa,GAAI,KAAKT,WAAtB;AACF,WAAKO,KAAL,CAAW,YAAX,EAAyBE,cAAzB;AACA,WAAKR,kBAAL;AACA,WAAKF,oBAAL,GAA4BU,cAA5B;AACD,KA7BM;;AA8BPE,YAAQ,GAAE;AACR,UAAIF,cAAa,GAAIL,QAAQ,CAAC,KAAKN,gBAAN,CAAR,GAAkCM,QAAQ,CAAC,KAAKC,yBAAN,CAA/D;AACAI,oBAAa,GAAIL,QAAQ,CAAC,KAAKN,gBAAN,CAAR,GAAkCM,QAAQ,CAACK,cAAD,CAA3D,CAFQ,CAEoE;;AAC5Eb,aAAO,CAACC,GAAR,CAAYY,cAAZ;AACAb,aAAO,CAACC,GAAR,CAAY,KAAKC,gBAAjB;AACA,WAAKS,KAAL,CAAW,YAAX,EAAyBE,cAAzB;AACA,WAAKR,kBAAL;AACA,WAAKF,oBAAL,GAA4BU,cAA5B;AACF;;AAtCO,GATI;;AAiDbG,MAAI,GAAE;AACJ,WAAM;AACJT,uBAAiB,EAAE;AADf,KAAN;AAGF;;AArDa,CAAf","names":["name","props","mounted","console","log","numberOfElements","componentFromElement","fromElement","makeIntervalNumber","methods","intervalDisplayed","parseInt","numberOfElementsToDisplay","makeFirst","$emit","makePrevaius","newFromElement","makeNext","makeLast","data"],"sourceRoot":"","sources":["D:\\fakultet\\6.semestar\\MRS\\Projekat\\projekat-login\\projekat\\mrs-isa-front\\src\\components\\paginationComponent.vue"],"sourcesContent":["<template>\r\n  <nav aria-label=\"Page navigation example\">\r\n    <ul class=\"pagination\">\r\n      <li class=\"page-item\">\r\n        <button class=\"page-link\" @click=\"makeFirst\" aria-label=\"First\">\r\n          <span aria-hidden=\"true\">&lt;&lt;</span>\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <button class=\"page-link\" @click=\"makePrevaius\" aria-label=\"Previous\">\r\n          <span aria-hidden=\"true\">&lt;</span>\r\n        </button>\r\n      </li>\r\n      <li class=\"page-item\"><p class=\"text-secondary pt-2 px-3\" :key=\"textKey\"> {{ intervalDisplayed }} od\r\n        {{ numberOfElements }}</p></li>\r\n      <li class=\"page-item\">\r\n        <button class=\"page-link\" @click=\"makeNext\" aria-label=\"Next\">\r\n          <span aria-hidden=\"true\">&gt;</span>\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <button class=\"page-link\" @click=\"makeLast\" aria-label=\"Last\">\r\n          <span aria-hidden=\"true\">&gt;&gt;</span>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"paginationComponent\",\r\n  props: [\"numberOfElements\", \"fromElement\", \"numberOfElementsToDisplay\"],\r\n  mounted() {\r\n    console.log(\" num of elements:\" + this.numberOfElements);\r\n    this.componentFromElement = this.fromElement;\r\n    this.makeIntervalNumber();\r\n\r\n  },\r\n  methods: {\r\n    makeIntervalNumber(){\r\n      this.intervalDisplayed = parseInt(this.fromElement) + parseInt(this.numberOfElementsToDisplay);\r\n      if (this.intervalDisplayed > this.numberOfElements)\r\n        this.intervalDisplayed = this.numberOfElements;\r\n      console.log(\"fromElement: \" + this.fromElement);\r\n      console.log(\"interval display: \" + this.intervalDisplayed);\r\n    },\r\n    makeFirst(){\r\n      this.$emit('pagination', 0);\r\n      this.makeIntervalNumber();\r\n      this.componentFromElement = 0;\r\n    },\r\n    makePrevaius(){\r\n      let newFromElement = parseInt(this.fromElement) - parseInt(this.numberOfElementsToDisplay);\r\n      if (newFromElement <= 0)\r\n        newFromElement = 0\r\n      this.$emit('pagination', newFromElement);\r\n      this.makeIntervalNumber();\r\n      this.componentFromElement = newFromElement;\r\n    },\r\n    makeNext(){\r\n      console.log(this.numberOfElements);\r\n      let newFromElement = parseInt(this.fromElement) + parseInt(this.numberOfElementsToDisplay);\r\n      if (newFromElement >= this.numberOfElements)\r\n        newFromElement = this.fromElement;\r\n      this.$emit('pagination', newFromElement);\r\n      this.makeIntervalNumber();\r\n      this.componentFromElement = newFromElement;\r\n    },\r\n    makeLast(){\r\n      let newFromElement = parseInt(this.numberOfElements) / parseInt(this.numberOfElementsToDisplay);\r\n      newFromElement = parseInt(this.numberOfElements) - parseInt(newFromElement);// this.numberOfElements - this.fromElement;\r\n      console.log(newFromElement);\r\n      console.log(this.numberOfElements);\r\n      this.$emit('pagination', newFromElement);\r\n      this.makeIntervalNumber();\r\n      this.componentFromElement = newFromElement;\r\n    }\r\n  },\r\n  data(){\r\n    return{\r\n      intervalDisplayed: 0\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}