{"ast":null,"code":"import axios from 'axios';\nimport authHeader from \"@/servieces/authHeader\";\nimport Config from \"../config.json\";\nconst SHIP_OWNER_API_BASE_URL = Config.BASE_URL + '/ship_owner';\n\nclass ShipOwnerService {\n  getOwner(coID) {\n    console.log(authHeader());\n    return axios.get(SHIP_OWNER_API_BASE_URL + '/profile/' + coID, {\n      headers: authHeader()\n    });\n  }\n\n  updateOwner(coID, co) {\n    return axios.post(SHIP_OWNER_API_BASE_URL + \"/update/profile/\" + coID, co, {\n      headers: authHeader()\n    });\n  }\n\n  verify(code) {\n    return axios.get(SHIP_OWNER_API_BASE_URL + \"/verify/\" + code).then(response => {\n      console.log(response.data);\n\n      if (response.data.accessToken) {\n        localStorage.user = JSON.stringify(response.data); //setItem('user', response.data);\n      } else {\n        localStorage.user = null;\n      }\n\n      return response.data;\n    });\n  }\n\n}\n\nexport default new ShipOwnerService();","map":{"version":3,"sources":["D:/fakultet/6.semestar/MRS/Projekat/projekat-login/projekat/mrs-isa-front/src/servieces/ShipOwnerService.js"],"names":["axios","authHeader","Config","SHIP_OWNER_API_BASE_URL","BASE_URL","ShipOwnerService","getOwner","coID","console","log","get","headers","updateOwner","co","post","verify","code","then","response","data","accessToken","localStorage","user","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,MAAMC,uBAAuB,GAAGD,MAAM,CAACE,QAAP,GAAkB,aAAlD;;AAEA,MAAMC,gBAAN,CAAsB;AAClBC,EAAAA,QAAQ,CAACC,IAAD,EAAM;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAU,EAAtB;AACA,WAAOD,KAAK,CAACU,GAAN,CAAUP,uBAAuB,GAAC,WAAxB,GAAoCI,IAA9C,EAAoD;AACvDI,MAAAA,OAAO,EAAEV,UAAU;AADoC,KAApD,CAAP;AAGH;;AACDW,EAAAA,WAAW,CAACL,IAAD,EAAOM,EAAP,EAAU;AACjB,WAAOb,KAAK,CAACc,IAAN,CAAWX,uBAAuB,GAAG,kBAA1B,GAA+CI,IAA1D,EAAgEM,EAAhE,EAAoE;AACvEF,MAAAA,OAAO,EAAEV,UAAU;AADoD,KAApE,CAAP;AAGH;;AACDc,EAAAA,MAAM,CAACC,IAAD,EAAM;AACR,WAAOhB,KAAK,CAACU,GAAN,CAAUP,uBAAuB,GAAG,UAA1B,GAAuCa,IAAjD,EACFC,IADE,CACIC,QAAD,IAAa;AACfV,MAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACC,IAArB;;AACA,UAAID,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA8B;AAC1BC,QAAAA,YAAY,CAACC,IAAb,GAAoBC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAApB,CAD0B,CACyB;AACtD,OAFD,MAEK;AACDE,QAAAA,YAAY,CAACC,IAAb,GAAoB,IAApB;AACH;;AAED,aAAOJ,QAAQ,CAACC,IAAhB;AAEH,KAXE,CAAP;AAYH;;AAzBiB;;AA4BtB,eAAe,IAAId,gBAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport authHeader from \"@/servieces/authHeader\";\r\n\r\nimport Config from \"../config.json\";\r\n\r\nconst SHIP_OWNER_API_BASE_URL = Config.BASE_URL + '/ship_owner';\r\n\r\nclass ShipOwnerService{\r\n    getOwner(coID){\r\n        console.log(authHeader());\r\n        return axios.get(SHIP_OWNER_API_BASE_URL+'/profile/'+coID, {\r\n            headers: authHeader()\r\n        });\r\n    }\r\n    updateOwner(coID, co){\r\n        return axios.post(SHIP_OWNER_API_BASE_URL + \"/update/profile/\" + coID, co, {\r\n            headers: authHeader()\r\n        });\r\n    }\r\n    verify(code){\r\n        return axios.get(SHIP_OWNER_API_BASE_URL + \"/verify/\" + code)\r\n            .then((response) =>{\r\n                console.log(response.data);\r\n                if (response.data.accessToken){\r\n                    localStorage.user = JSON.stringify(response.data); //setItem('user', response.data);\r\n                }else{\r\n                    localStorage.user = null;\r\n                }\r\n\r\n                return response.data;\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport default new ShipOwnerService();\r\n"]},"metadata":{},"sourceType":"module"}