{"ast":null,"code":"import $ from \"jquery\";\nexport default {\n  name: \"modalWithTextAreaAndRating\",\n  props: ['buttonText', 'buttonColor', \"header\", \"index\"],\n  created: function () {\n    this.modalId = \"#\" + this.index;\n  },\n  methods: {\n    openModel() {\n      //$('#'+this.index).modal('show');\n      //$('#'+this.index).modal('show');\n      var modalToggle = document.getElementById(this.index); ///myModal.show(modalToggle)\n\n      $('#' + this.index).show(modalToggle);\n      $('#' + this.index).focus(modalToggle);\n    },\n\n    emitValue() {\n      if (this.text == \"\" && this.rating == \"*\") {\n        document.getElementById(\"emptyErrorModalWithTextAreaAndRating\").style.color = \"red\";\n        document.getElementById(\"emptyErrorModalWithTextAreaAndRating\").style.visibility = \"visible\";\n        return;\n      }\n\n      const modal = document.getElementById(this.index); // change state like in hidden modal\n\n      modal.classList.remove('show');\n      modal.setAttribute('aria-hidden', 'true');\n      modal.setAttribute('style', 'display: none'); // get modal backdrop\n\n      const modalBackdrops = document.getElementsByClassName('modal-backdrop'); // remove opened modal backdrop\n\n      document.body.removeChild(modalBackdrops[0]);\n      document.body.style.overflow = 'auto';\n      this.$emit('input-text-rating', this.text, this.rating);\n    },\n\n    changeRating(e) {\n      this.rating = e.target.value;\n    }\n\n  },\n\n  data() {\n    return {\n      text: \"\",\n      rating: \"*\",\n      modalId: \"\"\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAiDA,OAAOA,CAAP,MAAc,QAAd;AAEA,eAAe;AACbC,MAAI,EAAE,4BADO;AAEbC,OAAK,EAAE,CAAC,YAAD,EAAe,aAAf,EAA8B,QAA9B,EAAwC,OAAxC,CAFM;AAGbC,SAAO,EACH,YAAY;AACV,SAAKC,OAAL,GAAe,MAAI,KAAKC,KAAxB;AACF,GANS;AAQbC,SAAM,EAAI;AACRC,aAAS,GAAE;AAET;AACA;AACA,UAAIC,WAAU,GAAIC,QAAQ,CAACC,cAAT,CAAwB,KAAKL,KAA7B,CAAlB,CAJS,CAKT;;AACAL,OAAC,CAAC,MAAI,KAAKK,KAAV,CAAD,CAAkBM,IAAlB,CAAuBH,WAAvB;AACAR,OAAC,CAAC,MAAI,KAAKK,KAAV,CAAD,CAAkBO,KAAlB,CAAwBJ,WAAxB;AACD,KATO;;AAURK,aAAS,GAAE;AACT,UAAI,KAAKC,IAAL,IAAa,EAAb,IAAmB,KAAKC,MAAL,IAAa,GAApC,EAAwC;AACtCN,gBAAQ,CAACC,cAAT,CAAwB,sCAAxB,EAAgEM,KAAhE,CAAsEC,KAAtE,GAA8E,KAA9E;AACAR,gBAAQ,CAACC,cAAT,CAAwB,sCAAxB,EAAgEM,KAAhE,CAAsEE,UAAtE,GAAmF,SAAnF;AACA;AACF;;AAEA,YAAMC,KAAI,GAAIV,QAAQ,CAACC,cAAT,CAAwB,KAAKL,KAA7B,CAAd,CAPS,CAST;;AACAc,WAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,MAAvB;AACAF,WAAK,CAACG,YAAN,CAAmB,aAAnB,EAAkC,MAAlC;AACAH,WAAK,CAACG,YAAN,CAAmB,OAAnB,EAA4B,eAA5B,EAZS,CAcT;;AACA,YAAMC,cAAa,GAAId,QAAQ,CAACe,sBAAT,CAAgC,gBAAhC,CAAvB,CAfS,CAiBT;;AACAf,cAAQ,CAACgB,IAAT,CAAcC,WAAd,CAA0BH,cAAc,CAAC,CAAD,CAAxC;AACAd,cAAQ,CAACgB,IAAT,CAAcT,KAAd,CAAoBW,QAApB,GAA+B,MAA/B;AACA,WAAKC,KAAL,CAAW,mBAAX,EAAgC,KAAKd,IAArC,EAA2C,KAAKC,MAAhD;AAED,KAhCO;;AAiCRc,gBAAY,CAACC,CAAD,EAAG;AACb,WAAKf,MAAL,GAAce,CAAC,CAACC,MAAF,CAASC,KAAvB;AACF;;AAnCQ,GARG;;AA6CbC,MAAI,GAAG;AACL,WAAO;AACLnB,UAAI,EAAE,EADD;AAELC,YAAM,EAAE,GAFH;AAGLX,aAAO,EAAE;AAHJ,KAAP;AAKF;;AAnDa,CAAf","names":["$","name","props","created","modalId","index","methods","openModel","modalToggle","document","getElementById","show","focus","emitValue","text","rating","style","color","visibility","modal","classList","remove","setAttribute","modalBackdrops","getElementsByClassName","body","removeChild","overflow","$emit","changeRating","e","target","value","data"],"sourceRoot":"","sources":["D:\\fakultet\\6.semestar\\MRS\\Projekat\\projekat-login\\projekat\\mrs-isa-front\\src\\components\\modalWithTextAreaAndRating.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n    <button type=\"button\" @click=\"openModel\" :style=\"buttonColor\" class=\"btn btn-secondary\" data-bs-toggle=\"modal\" :data-bs-target=\"modalId\">\r\n      {{buttonText}}\r\n    </button>\r\n\r\n    <!-- Modal -->\r\n    <div class=\"modal fade\" :id=index tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{header}}</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <textarea class=\"my-4\" rows=\"5\" cols=\"50\" name=\"text\" v-model=\"text\"></textarea>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"box box-orange box-example-1to10\">\r\n                <div class=\"box-body\">\r\n                  <p class=\"d-flex justify-content-start\"> Ocena: </p>\r\n                  <select @change=\"changeRating\" class=\"form-select\" style=\"width: 70px\" id=\"ratingId\" name=\"rating\" aria-label=\"Default select\">\r\n                    <option selected>*</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          <div class=\"modal-footer\">\r\n\r\n            <p id=\"emptyErrorModalWithTextAreaAndRating\" style=\"visibility: hidden;\"> Ne može da se pošalje prazano. </p>\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Odustani</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click.prevent=\"emitValue\">Pošalji</button>\r\n          </div>\r\n        </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport $ from \"jquery\";\r\n\r\nexport default {\r\n  name: \"modalWithTextAreaAndRating\",\r\n  props: ['buttonText', 'buttonColor', \"header\", \"index\"],\r\n  created:\r\n      function () {\r\n        this.modalId = \"#\"+this.index;\r\n      }\r\n  ,\r\n  methods : {\r\n    openModel(){\r\n\r\n      //$('#'+this.index).modal('show');\r\n      //$('#'+this.index).modal('show');\r\n      var modalToggle = document.getElementById(this.index);\r\n      ///myModal.show(modalToggle)\r\n      $('#'+this.index).show(modalToggle);\r\n      $('#'+this.index).focus(modalToggle);\r\n    },\r\n    emitValue(){\r\n      if (this.text == \"\" && this.rating==\"*\"){\r\n        document.getElementById(\"emptyErrorModalWithTextAreaAndRating\").style.color = \"red\";\r\n        document.getElementById(\"emptyErrorModalWithTextAreaAndRating\").style.visibility = \"visible\";\r\n        return;\r\n      }\r\n\r\n      const modal = document.getElementById(this.index);\r\n\r\n      // change state like in hidden modal\r\n      modal.classList.remove('show');\r\n      modal.setAttribute('aria-hidden', 'true');\r\n      modal.setAttribute('style', 'display: none');\r\n\r\n      // get modal backdrop\r\n      const modalBackdrops = document.getElementsByClassName('modal-backdrop');\r\n\r\n      // remove opened modal backdrop\r\n      document.body.removeChild(modalBackdrops[0]);\r\n      document.body.style.overflow = 'auto';\r\n      this.$emit('input-text-rating', this.text, this.rating);\r\n\r\n    },\r\n    changeRating(e){\r\n      this.rating = e.target.value;\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      text: \"\",\r\n      rating: \"*\",\r\n      modalId: \"\",\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}