{"ast":null,"code":"import 'vue3-openlayers';\nimport { inject, ref } from 'vue'; //https://vue3openlayers.netlify.app/\n\nexport default {\n  name: \"open-maps\",\n  props: ['lon', 'lat'],\n  methods: {\n    registerClick(event) {\n      let lonlat = this.map.getCoordinateFromPixel(event.pixel);\n      this.center = lonlat;\n      this.coordinate = lonlat;\n      this.$emit('coordinate-changed', lonlat[0], lonlat[1]);\n    },\n\n    zoomChanged(currentZoom) {\n      this.currentZoom = currentZoom;\n    },\n\n    centerChanged(center) {\n      this.currentCenter = center;\n    }\n\n  },\n\n  mounted() {\n    this.center = [this.lon, this.lat];\n    this.coordinate = [this.lon, this.lat];\n  },\n\n  setup() {\n    const center = ref([0, 0]);\n    const projection = ref('EPSG:4326');\n    const zoom = ref(8);\n    const rotation = ref(0);\n    const view = ref(null);\n    const map = ref(null);\n    const radius = ref(10);\n    const strokeWidth = ref(10);\n    const strokeColor = ref('red');\n    const fillColor = ref('white');\n    const coordinate = ref([0, 0]);\n\n    const pointer = require(\"@/assets/pin.png\");\n\n    const url = ref(\"https://openlayers.org/en/latest/examples/data/geojson/countries.geojson\");\n    const format = inject('ol-format');\n    console.log(format);\n    const geoJson = new format.GeoJSON();\n    return {\n      center,\n      projection,\n      zoom,\n      rotation,\n      map,\n      view,\n      pointer,\n      url,\n      geoJson,\n      radius,\n      strokeWidth,\n      strokeColor,\n      fillColor,\n      coordinate\n    };\n  },\n\n  data() {\n    return {\n      currentCenter: this.center,\n      currentZoom: this.zoom\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAoCA,OAAO,iBAAP;AACA,SAAQA,MAAR,EAAgBC,GAAhB,QAA0B,KAA1B,C,CACA;;AACA,eAAe;AACbC,MAAI,EAAE,WADO;AAEbC,OAAK,EAAE,CAAC,KAAD,EAAQ,KAAR,CAFM;AAGbC,SAAO,EAAC;AACNC,iBAAa,CAACC,KAAD,EAAQ;AACnB,UAAIC,MAAK,GAAI,KAAKC,GAAL,CAASC,sBAAT,CAAgCH,KAAK,CAACI,KAAtC,CAAb;AACA,WAAKC,MAAL,GAAcJ,MAAd;AACA,WAAKK,UAAL,GAAkBL,MAAlB;AACA,WAAKM,KAAL,CAAW,oBAAX,EAAiCN,MAAM,CAAC,CAAD,CAAvC,EAA4CA,MAAM,CAAC,CAAD,CAAlD;AACD,KANK;;AAONO,eAAW,CAACC,WAAD,EAAc;AACvB,WAAKA,WAAL,GAAmBA,WAAnB;AACD,KATK;;AAUNC,iBAAa,CAACL,MAAD,EAAS;AACpB,WAAKM,aAAL,GAAqBN,MAArB;AACD;;AAZK,GAHK;;AAiBbO,SAAO,GAAG;AACR,SAAKP,MAAL,GAAc,CAAC,KAAKQ,GAAN,EAAW,KAAKC,GAAhB,CAAd;AACA,SAAKR,UAAL,GAAkB,CAAC,KAAKO,GAAN,EAAW,KAAKC,GAAhB,CAAlB;AACD,GApBY;;AAqBbC,OAAK,GAAG;AACN,UAAMV,MAAK,GAAIV,GAAG,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,CAAlB;AACA,UAAMqB,UAAS,GAAIrB,GAAG,CAAC,WAAD,CAAtB;AACA,UAAMsB,IAAG,GAAItB,GAAG,CAAC,CAAD,CAAhB;AACA,UAAMuB,QAAO,GAAIvB,GAAG,CAAC,CAAD,CAApB;AACA,UAAMwB,IAAG,GAAIxB,GAAG,CAAC,IAAD,CAAhB;AACA,UAAMO,GAAE,GAAIP,GAAG,CAAC,IAAD,CAAf;AACA,UAAMyB,MAAK,GAAIzB,GAAG,CAAC,EAAD,CAAlB;AACA,UAAM0B,WAAU,GAAI1B,GAAG,CAAC,EAAD,CAAvB;AACA,UAAM2B,WAAU,GAAI3B,GAAG,CAAC,KAAD,CAAvB;AACA,UAAM4B,SAAQ,GAAI5B,GAAG,CAAC,OAAD,CAArB;AACA,UAAMW,UAAS,GAAIX,GAAG,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,CAAtB;;AAEA,UAAM6B,OAAM,GAAIC,OAAO,CAAC,kBAAD,CAAvB;;AAEA,UAAMC,GAAE,GAAI/B,GAAG,CAAC,0EAAD,CAAf;AAEA,UAAMgC,MAAK,GAAIjC,MAAM,CAAC,WAAD,CAArB;AACAkC,WAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAMG,OAAM,GAAI,IAAIH,MAAM,CAACI,OAAX,EAAhB;AAEA,WAAO;AACL1B,YADK;AAELW,gBAFK;AAGLC,UAHK;AAILC,cAJK;AAKLhB,SALK;AAMLiB,UANK;AAOLK,aAPK;AAQLE,SARK;AASLI,aATK;AAULV,YAVK;AAWLC,iBAXK;AAYLC,iBAZK;AAaLC,eAbK;AAcLjB;AAdK,KAAP;AAiBD,GA3DY;;AA4Db0B,MAAI,GAAG;AACL,WAAO;AACLrB,mBAAa,EAAE,KAAKN,MADf;AAELI,iBAAW,EAAE,KAAKQ;AAFb,KAAP;AAID;;AAjEY,CAAf","names":["inject","ref","name","props","methods","registerClick","event","lonlat","map","getCoordinateFromPixel","pixel","center","coordinate","$emit","zoomChanged","currentZoom","centerChanged","currentCenter","mounted","lon","lat","setup","projection","zoom","rotation","view","radius","strokeWidth","strokeColor","fillColor","pointer","require","url","format","console","log","geoJson","GeoJSON","data"],"sourceRoot":"","sources":["D:\\fakultet\\6.semestar\\MRS\\Projekat\\projekat-login\\projekat\\mrs-isa-front\\src\\components\\VueMaps.vue"],"sourcesContent":["<template>\r\n  <ol-map :loadTilesWhileAnimating=\"true\" :loadTilesWhileInteracting=\"true\" style=\"height:400px\"\r\n          :moveTolerance=\"4\" @click=\"registerClick\" ref=\"map\">\r\n\r\n    <ol-view ref=\"view\" :center=\"center\" :rotation=\"rotation\" :zoom=\"zoom\"\r\n             :projection=\"projection\" @zoomChanged=\"zoomChanged\"\r\n             @centerChanged=\"centerChanged\"/>\r\n\r\n    <ol-tile-layer>\r\n      <ol-source-osm />\r\n    </ol-tile-layer>\r\n\r\n\r\n    <ol-zoom-control />\r\n    <ol-zoomslider-control />\r\n    <ol-attribution-control/>\r\n\r\n\r\n\r\n    <ol-vector-layer>\r\n      <ol-source-vector>\r\n        <ol-feature>\r\n          <ol-geom-point :coordinates=\"coordinate\"></ol-geom-point>\r\n          <ol-style>\r\n              <ol-style-icon :src=\"pointer\" :scale=\"0.1\"></ol-style-icon>\r\n          </ol-style>\r\n        </ol-feature>\r\n\r\n      </ol-source-vector>\r\n\r\n    </ol-vector-layer>\r\n\r\n  </ol-map>\r\n</template>\r\n\r\n<script>\r\nimport 'vue3-openlayers';\r\nimport {inject, ref} from 'vue'\r\n//https://vue3openlayers.netlify.app/\r\nexport default {\r\n  name: \"open-maps\",\r\n  props: ['lon', 'lat'],\r\n  methods:{\r\n    registerClick(event) {\r\n      let lonlat = this.map.getCoordinateFromPixel(event.pixel);\r\n      this.center = lonlat;\r\n      this.coordinate = lonlat;\r\n      this.$emit('coordinate-changed', lonlat[0], lonlat[1]);\r\n    },\r\n    zoomChanged(currentZoom) {\r\n      this.currentZoom = currentZoom;\r\n    },\r\n    centerChanged(center) {\r\n      this.currentCenter = center;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.center = [this.lon, this.lat];\r\n    this.coordinate = [this.lon, this.lat];\r\n  },\r\n  setup() {\r\n    const center = ref([0,0]);\r\n    const projection = ref('EPSG:4326');\r\n    const zoom = ref(8);\r\n    const rotation = ref(0);\r\n    const view = ref(null);\r\n    const map = ref(null);\r\n    const radius = ref(10);\r\n    const strokeWidth = ref(10)\r\n    const strokeColor = ref('red')\r\n    const fillColor = ref('white')\r\n    const coordinate = ref([0,0])\r\n\r\n    const pointer = require(\"@/assets/pin.png\");\r\n\r\n    const url = ref(\"https://openlayers.org/en/latest/examples/data/geojson/countries.geojson\")\r\n\r\n    const format = inject('ol-format');\r\n    console.log(format)\r\n    const geoJson = new format.GeoJSON();\r\n\r\n    return {\r\n      center,\r\n      projection,\r\n      zoom,\r\n      rotation,\r\n      map,\r\n      view,\r\n      pointer,\r\n      url,\r\n      geoJson,\r\n      radius,\r\n      strokeWidth,\r\n      strokeColor,\r\n      fillColor,\r\n      coordinate\r\n\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      currentCenter: this.center,\r\n      currentZoom: this.zoom,\r\n    }\r\n  },\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}