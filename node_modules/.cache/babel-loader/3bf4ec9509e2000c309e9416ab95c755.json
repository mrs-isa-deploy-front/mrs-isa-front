{"ast":null,"code":"import siteAdventureList from \"@/components/main_site/siteAdventureList\";\nimport BasicHeader from \"@/components/main_site/basicHeader\";\nimport ClientHeader from \"@/components/client/clientHeader\";\nimport SiteAdventureSearchNav from \"@/components/main_site/siteAdventureSearchNav\";\nimport adventureServce from \"@/servieces/AdventureServce\";\nimport cottageServce from \"@/servieces/CottageServce\";\nexport default {\n  name: \"siteAdventureListView\",\n  components: {\n    SiteAdventureSearchNav,\n    ClientHeader,\n    BasicHeader,\n    siteAdventureList\n  },\n  created: function () {\n    adventureServce.getAdventures().then(response => {\n      this.cottages = response.data;\n      this.listLength = this.cottages.length;\n    });\n\n    try {\n      if (JSON.parse(localStorage.user) == null) {\n        this.verifiedClient = false;\n      } else {\n        this.verifiedClient = true;\n      }\n    } catch (error) {\n      this.verifiedClient = false;\n    }\n\n    this.forceRemounting();\n  },\n  methods: {\n    sortList() {\n      let sortBy = document.getElementById(\"sortBy\").value;\n\n      if (sortBy == 1) {\n        cottageServce.sortCottageListByName(this.cottages).then(response => {\n          this.cottages = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 2) {\n        cottageServce.sortCottageListByLocation(this.cottages).then(response => {\n          this.cottages = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 3) {\n        cottageServce.sortCottageListByRating(this.cottages).then(response => {\n          this.cottages = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 4) {\n        cottageServce.sortCottageListByPrice(this.cottages).then(response => {\n          this.cottages = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 5) {\n        cottageServce.sortCottageListByNumberOfBeds(this.cottages).then(response => {\n          this.cottages = response.data;\n          this.forceRemounting();\n        });\n      } else if (sortBy == 6) {\n        cottageServce.sortCottageListByNumberOfRooms(this.cottages).then(response => {\n          this.cottages = response.data;\n          this.forceRemounting();\n        });\n      }\n    },\n\n    filterAdventures(filterDto) {\n      console.log(filterDto);\n      adventureServce.filterAdventures(filterDto).then(response => {\n        this.cottages = response.data;\n        this.listLength = this.cottages.length;\n        this.adventuresKey++;\n        console.log(this.listLength);\n      });\n    },\n\n    forceRemounting() {\n      this.clientHeaderKey += 1;\n      this.basicHeaderKey += 1;\n      this.adventuresKey += 1;\n    }\n\n  },\n\n  data() {\n    return {\n      cottages: [],\n      listLength: 0,\n      verifiedClient: false,\n      basicHeaderKey: 0,\n      clientHeaderKey: 0,\n      adventuresKey: 0\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["siteAdventureList","BasicHeader","ClientHeader","SiteAdventureSearchNav","adventureServce","cottageServce","name","components","created","getAdventures","then","response","cottages","data","listLength","length","JSON","parse","localStorage","user","verifiedClient","error","forceRemounting","methods","sortList","sortBy","document","getElementById","value","sortCottageListByName","sortCottageListByLocation","sortCottageListByRating","sortCottageListByPrice","sortCottageListByNumberOfBeds","sortCottageListByNumberOfRooms","filterAdventures","filterDto","console","log","adventuresKey","clientHeaderKey","basicHeaderKey"],"sourceRoot":"","sources":["D:\\fakultet\\6.semestar\\MRS\\Projekat\\projekat-login\\projekat\\mrs-isa-front\\src\\components\\main_site\\siteAdventureListView.vue"],"sourcesContent":["<template>\r\n\r\n  <basic-header :key=\"basicHeaderKey\" v-show=\"!verifiedClient\"></basic-header>\r\n  <client-header :key=\"clientHeaderKey\" v-show=\"verifiedClient\"></client-header>\r\n  <div>\r\n\r\n    <div>\r\n      <select style=\"right: 10%; width: 200px; position: absolute;\" id=\"sortBy\" @change=\"sortList\" class=\"form-select\" aria-label=\"Default select\">\r\n        <option selected>Sortiraj po</option>\r\n        <option value=\"1\">Naziv</option>\r\n        <option value=\"2\">Location</option>\r\n        <option value=\"3\">Ocena</option>\r\n        <option value=\"4\">Cena</option>\r\n        <option value=\"5\">Broj kreveta</option>\r\n        <option value=\"6\">Broj soba</option>\r\n      </select>\r\n    </div>\r\n    <br>\r\n    <br>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-3\" style=\"width: 240px;\">\r\n        <site-adventure-search-nav @filter=\"filterAdventures\"></site-adventure-search-nav>\r\n      </div>\r\n      <div class=\"col\">\r\n        <site-adventure-list :cottages=\"cottages\" :listLength=\"listLength\" :key=\"adventuresKey\"></site-adventure-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport siteAdventureList from \"@/components/main_site/siteAdventureList\";\r\nimport BasicHeader from \"@/components/main_site/basicHeader\";\r\nimport ClientHeader from \"@/components/client/clientHeader\";\r\nimport SiteAdventureSearchNav from \"@/components/main_site/siteAdventureSearchNav\";\r\nimport adventureServce from \"@/servieces/AdventureServce\";\r\nimport cottageServce from \"@/servieces/CottageServce\";\r\nexport default {\r\n  name: \"siteAdventureListView\",\r\n  components: {SiteAdventureSearchNav, ClientHeader, BasicHeader, siteAdventureList},\r\n  created:\r\n      function () {\r\n        adventureServce.getAdventures().then(\r\n            (response) => {\r\n              this.cottages = response.data;\r\n              this.listLength = this.cottages.length;\r\n            }\r\n        )\r\n        try{\r\n\r\n          if (JSON.parse(localStorage.user) == null) {\r\n            this.verifiedClient = false;\r\n          } else {\r\n            this.verifiedClient = true;\r\n          }\r\n        }catch (error){\r\n          this.verifiedClient = false;\r\n\r\n        }\r\n        this.forceRemounting();\r\n\r\n\r\n      },\r\n  methods: {\r\n    sortList(){\r\n      let sortBy = document.getElementById(\"sortBy\").value;\r\n      if (sortBy == 1){\r\n        cottageServce.sortCottageListByName(this.cottages)\r\n            .then(response =>{\r\n              this.cottages = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      } else if (sortBy == 2){\r\n        cottageServce.sortCottageListByLocation(this.cottages)\r\n            .then(response =>{\r\n              this.cottages = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }else if (sortBy == 3){\r\n        cottageServce.sortCottageListByRating(this.cottages)\r\n            .then(response =>{\r\n              this.cottages = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }else if (sortBy == 4){\r\n        cottageServce.sortCottageListByPrice(this.cottages)\r\n            .then(response =>{\r\n              this.cottages = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }else if (sortBy == 5){\r\n        cottageServce.sortCottageListByNumberOfBeds(this.cottages)\r\n            .then(response =>{\r\n              this.cottages = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }else if (sortBy == 6){\r\n        cottageServce.sortCottageListByNumberOfRooms(this.cottages)\r\n            .then(response =>{\r\n              this.cottages = response.data;\r\n              this.forceRemounting();\r\n            })\r\n      }\r\n    },\r\n\r\n    filterAdventures(filterDto){\r\n      console.log(filterDto);\r\n      adventureServce.filterAdventures(filterDto)\r\n          .then((response) => {\r\n                this.cottages   = response.data;\r\n                this.listLength = this.cottages.length;\r\n                this.adventuresKey++;\r\n                console.log(this.listLength);\r\n              }\r\n          )\r\n    },\r\n    forceRemounting() {\r\n      this.clientHeaderKey += 1;\r\n      this.basicHeaderKey += 1;\r\n      this.adventuresKey += 1;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      cottages: [],\r\n      listLength: 0,\r\n      verifiedClient: false,\r\n      basicHeaderKey: 0,\r\n      clientHeaderKey: 0,\r\n      adventuresKey: 0\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}