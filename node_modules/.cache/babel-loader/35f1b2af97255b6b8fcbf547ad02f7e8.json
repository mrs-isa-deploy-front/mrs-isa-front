{"ast":null,"code":"import axios from 'axios';\nimport Config from \"../config.json\";\nconst AUTH_URL = Config.BASE_URL + '/book/site';\n\nclass LoginServce {\n  login(user) {\n    //console.log(JSON.stringify(user));\n    return axios.post(AUTH_URL + \"/login\", user).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem('user', response.data);\n      }\n\n      console.log(response.data);\n      var userToken = response.data;\n\n      if (userToken.roleID === 1) {\n        this.$router.push(\"/client/home\");\n      } else if (userToken.roleID === 2) {\n        this.$router.push(\"/client/home\"); //admin\n      } else if (userToken.roleID === 3) {\n        this.$router.push(\"/cottage/home\");\n      } else if (userToken.roleID === 4) {\n        this.$router.push(\"/client/home\"); //ship owner\n      } else if (userToken.roleID === 5) {\n        this.$router.push(\"/instructor/home\"); //fishing instructor\n      }\n    }).catch(function (error) {\n      console.log(error.toJSON());\n\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n  }\n\n}\n\nexport default new LoginServce();","map":{"version":3,"sources":["D:/fakultet/6.semestar/MRS/Projekat/projekat-login/projekat/mrs-isa-front/src/servieces/LoginServce.js"],"names":["axios","Config","AUTH_URL","BASE_URL","LoginServce","login","user","post","then","response","data","accessToken","localStorage","setItem","console","log","userToken","roleID","$router","push","catch","error","toJSON","status","headers","request","message","config","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,QAAP,GAAkB,YAAnC;;AAEA,MAAMC,WAAN,CAAiB;AACbC,EAAAA,KAAK,CAACC,IAAD,EAAM;AACP;AACA,WAAON,KAAK,CAACO,IAAN,CAAWL,QAAQ,GAAG,QAAtB,EAAgCI,IAAhC,EACEE,IADF,CACQC,QAAD,IAAa;AACf,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA8B;AAC1BC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BJ,QAAQ,CAACC,IAAtC;AACH;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACC,IAArB;AACA,UAAIM,SAAS,GAAGP,QAAQ,CAACC,IAAzB;;AACA,UAAIM,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA2B;AACvB,aAAKC,OAAL,CAAaC,IAAb,CAAkB,cAAlB;AACH,OAFD,MAGK,IAAIH,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA2B;AAC5B,aAAKC,OAAL,CAAaC,IAAb,CAAkB,cAAlB,EAD4B,CACM;AACrC,OAFI,MAGA,IAAIH,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA2B;AAC5B,aAAKC,OAAL,CAAaC,IAAb,CAAkB,eAAlB;AACH,OAFI,MAGA,IAAIH,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA2B;AAC5B,aAAKC,OAAL,CAAaC,IAAb,CAAkB,cAAlB,EAD4B,CACM;AACrC,OAFI,MAGA,IAAIH,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA2B;AAC5B,aAAKC,OAAL,CAAaC,IAAb,CAAkB,kBAAlB,EAD4B,CACU;AACzC;AACR,KAtBE,EAwBFC,KAxBE,CAwBI,UAAUC,KAAV,EAAiB;AACpBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACC,MAAN,EAAZ;;AACA,UAAID,KAAK,CAACZ,QAAV,EAAoB;AAChB;AACA;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACZ,QAAN,CAAeC,IAA3B;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACZ,QAAN,CAAec,MAA3B;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACZ,QAAN,CAAee,OAA3B;AACH,OAND,MAMO,IAAIH,KAAK,CAACI,OAAV,EAAmB;AACtB;AACA;AACA;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACI,OAAlB;AACH,OALM,MAKA;AACH;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,KAAK,CAACK,OAA3B;AACH;;AACDZ,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACM,MAAlB;AACH,KA1CE,CAAP;AA2CH;;AACDC,EAAAA,MAAM,GAAE;AACJhB,IAAAA,YAAY,CAACiB,UAAb,CAAwB,MAAxB;AACH;;AAjDY;;AAoDjB,eAAe,IAAIzB,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\n\r\nimport Config from \"../config.json\";\r\n\r\nconst AUTH_URL = Config.BASE_URL + '/book/site';\r\n\r\nclass LoginServce{\r\n    login(user){\r\n        //console.log(JSON.stringify(user));\r\n        return axios.post(AUTH_URL + \"/login\", user)\r\n                .then((response) =>{\r\n                    if (response.data.accessToken){\r\n                        localStorage.setItem('user', response.data);\r\n                    }\r\n                    console.log(response.data);\r\n                    var userToken = response.data;\r\n                    if (userToken.roleID === 1){\r\n                        this.$router.push(\"/client/home\");\r\n                    }\r\n                    else if (userToken.roleID === 2){\r\n                        this.$router.push(\"/client/home\");//admin\r\n                    }\r\n                    else if (userToken.roleID === 3){\r\n                        this.$router.push(\"/cottage/home\");\r\n                    }\r\n                    else if (userToken.roleID === 4){\r\n                        this.$router.push(\"/client/home\");//ship owner\r\n                    }\r\n                    else if (userToken.roleID === 5){\r\n                        this.$router.push(\"/instructor/home\");//fishing instructor\r\n                    }\r\n            })\r\n\r\n            .catch(function (error) {\r\n                console.log(error.toJSON());\r\n                if (error.response) {\r\n                    // The request was made and the server responded with a status code\r\n                    // that falls out of the range of 2xx\r\n                    console.log(error.response.data);\r\n                    console.log(error.response.status);\r\n                    console.log(error.response.headers);\r\n                } else if (error.request) {\r\n                    // The request was made but no response was received\r\n                    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n                    // http.ClientRequest in node.js\r\n                    console.log(error.request);\r\n                } else {\r\n                    // Something happened in setting up the request that triggered an Error\r\n                    console.log('Error', error.message);\r\n                }\r\n                console.log(error.config);\r\n            });\r\n    }\r\n    logout(){\r\n        localStorage.removeItem('user');\r\n    }\r\n}\r\n\r\nexport default new LoginServce();\r\n"]},"metadata":{},"sourceType":"module"}